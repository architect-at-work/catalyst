/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */
import com.github.spotbugs.snom.Effort

plugins {
    id 'buildlogic.java-library-conventions'
    id 'jacoco'
    id 'io.spring.javaformat' version '0.0.41'
    id 'checkstyle'
    id 'com.github.spotbugs' version '5.1.5'
    id 'maven-publish'
}

dependencies {
    implementation 'org.springframework:spring-core:6.1.3'
    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'org.springframework:spring-beans:6.1.3'
    implementation 'org.yaml:snakeyaml:2.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.10.0'
}

jacoco {
    toolVersion = '0.8.11'
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('reports')
    }

    finalizedBy jacocoTestCoverageVerification
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

checkstyle {
    toolVersion = '10.12.0'
    configDirectory = file("${rootProject.projectDir}/tools/checkstyle")
}

tasks.spotbugsMain {
    reports.create("html") {
        required = true
        outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
        setStylesheet("fancy-hist.xsl")
    }
}

tasks.spotbugsTest {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/test/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugs {
    toolVersion = '4.8.0'
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = Effort.DEFAULT
    reportLevel = 'default'
    excludeFilter = file("${rootProject.projectDir}/library/tools/spotbugs/exclude.xml")
    maxHeapSize = '1g'
}

group = 'org.andino'
def defaultVersion = '1.0'
version = project.findProperty('projectVersion') ?: System.getenv('PROJECT_VERSION') ?: defaultVersion
description = 'Common resources which could be used across services'

def githubUsername = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
def githubPassword = project.findProperty("gpr.key") ?: System.getenv("GPR_KEY")

publishing {
    repositories {
        maven {
            name = "inventory-commons"
            url = uri("https://maven.pkg.github.com/architect-at-work/inventory-common-library")
            credentials {
                username = githubUsername
                password = githubPassword
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId = 'inventory-commons'
            from(components.java)
        }
    }
}
