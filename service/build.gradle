import io.spring.javaformat.gradle.tasks.CheckFormat

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'buildlogic.java-application-conventions'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'org.openapi.generator' version '7.3.0'
    id 'io.spring.javaformat' version '0.0.41'
    id 'checkstyle'
}

apply from: "../gradle/swagger.gradle"

group = 'org.andino'
version = '0.0.1-SNAPSHOT'


ext {
    set('springCloudVersion', "2023.0.0")
    set('springModulithVersion', "1.1.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0-M1'


    runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'org.postgresql:postgresql:42.6.0'
    implementation 'org.flywaydb:flyway-core:10.1.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.1.0'

    implementation project(":library")
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'io.swagger.parser.v3:swagger-parser:2.1.20'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}
testing {
    suites {
        test {
            dependencies {
                implementation 'org.springframework.boot:spring-boot-starter-test'
                implementation 'org.springframework.modulith:spring-modulith-starter-test'
                implementation 'org.testcontainers:postgresql:1.19.4'
                implementation 'org.testcontainers:junit-jupiter:1.19.4'
            }
            targets {
                configureEach {
                    testTask.configure {
                        systemProperty 'spring.profiles.active', 'test'
                    }
                }
            }
        }
    }

}
dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('reports')
    }

    excludedClassFilesForReport(classDirectories)
    finalizedBy jacocoTestCoverageVerification
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
    excludedClassFilesForReport(classDirectories)
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.95
            }
        }
    }
}

private excludedClassFilesForReport(classDirectories) {
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                'org/andino/service/CatalystApplication.class',
                'org/andino/service/product/dto/*',
                'org/andino/service/demand/api/*',
                'org/andino/service/demand/dto/*',
                'org/andino/service/product/api/*'
        ])
    }))
}

check.dependsOn jacocoTestCoverageVerification

tasks.withType(CheckFormat).configureEach {
    exclude "org/andino/service/product/api"
    exclude "org/andino/service/demand/api"
    exclude "org/andino/service/product/dto"
    exclude "org/andino/service/demand/dto"
}

checkstyle {
    toolVersion = '10.12.0'
    configDirectory = file("${rootProject.projectDir}/tools/checkstyle")
}